-------------------------------------------------------------------------
--	created:	2005/02/12
--	created:	12:2:2005   12:59
--	filename: 	x:\gamedata\scripts\dialogs_military.script
--	file path:	x:\gamedata\scripts
--	file base:	dialogs_military
--	file ext:	script
--	author:		Tunduk Vladimir aka Sidorovich
--	
--	purpose:	dialog support for military
-------------------------------------------------------------------------

-- Оплата долговцем наших услуг по устранению снайпера
function mil_dolg_payment (stalker, player)
    if not has_alife_info("military_scull_give_reward_1") then
	    dialogs.relocate_money(stalker, 4000, "in")
        db.actor:give_info_portion("military_scull_give_reward_1")
    end
end

function mil_dolg_payment2 (stalker, player)
    if not has_alife_info("military_scull_give_reward_2") then
	    dialogs.relocate_money(stalker, 8000, "in")
        db.actor:give_info_portion("military_scull_give_reward_2")
    end
end

function lukash_payment (stalker, player)
    dialogs.relocate_money (stalker, 7000, "in")
end

-- Отмечаем провал задачи
function mil_dolg_sniper_failed (stalker, player)
    level_tasks.set_task_state (task.fail, "mil_kill_sniper", 0)
    level_tasks.set_task_state (task.fail, "mil_kill_sniper", 1)
end

-- отмечаем выполнение задачи
function mil_dolg_sniper_complete (stalker, player)
    level_tasks.set_task_state (task.completed, "mil_kill_sniper", 0)
end

function transfer_flash (player, stalker)
	dialogs.relocate_item_section(stalker, "crazy_flash", "out")
end

function is_player_help (player, stalker)
    if db.storage[db.actor:id ()] == nil then return false end
    return db.storage[db.actor:id ()].mil_dolg["killed_by_actor"]
end

function no_player_help (stalker, player)
    return not this.is_player_help (player, stalker)
end

function transfer_rg6 (stalker, player)
    return
end

function set_freedom_enemy (player, stalker)
    --db.actor:set_character_community ("dolg")
    relation_registry.set_community_goodwill ("freedom", db.actor:id (), -5000)
end

function set_task1_complete (player, stalker)
    if has_alife_info("mil_leader_quest1_start") then
       level_tasks.set_task_state (task.completed, "mil_lukash_job", 1)
    end   
end

function set_task3_complete (player, stalker)
    if has_alife_info("mil_leader_quest1_start") then
       level_tasks.set_task_state (task.completed, "mil_lukash_job", 0)
       level_tasks.set_task_state (task.completed, "mil_lukash_job", 3)
    end   
end

function set_courier_task_complete (stalker, player)
end    

function actor_has_weapon (stalker, player)
    return xr_conditions.actor_has_weapon (player, stalker)
end

function actor_dont_has_weapon (stalker, player)
    return not xr_conditions.actor_has_weapon (player, stalker)
end


-- Карта Мёртвого города
-- function mil_have_deadcity_map(actor, npc)
--  	return db.actor:object("cit_deadcity_maps") ~= nil
-- end

function mil_give_deadcity_map(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "cit_deadcity_maps", "out")
	dialogs.relocate_money(second_speaker, 20000, "in")
end


function transfer_vodka (player, stalker)
    if player:object ("vodka") == nil then return end
    dialogs.relocate_item (stalker, player:object ("vodka"), "out")
end    

function have_a_vodka (stalker, player)
    return stalker:object ("vodka") ~= nil
end

function actor_punch (first_speaker, second_speaker)
	dialogs.break_dialog (first_speaker, second_speaker, 0)
    set_sleep_relocate(patrol ("mil_actor_path"):point(0), patrol ("mil_actor_path"):point(1), 60)
end

function send_ammo_for_AK (actor, npc)
    dialogs.relocate_item_section(npc, "ammo_5.56x45_ap", "in")
end

function send_ammo_for_LR (actor, npc)
    dialogs.relocate_item_section(npc, "ammo_11.43x23_hydro", "in")
end

function commander_transfer (actor, npc)
    dialogs.relocate_money(npc, npc:money() / 2, "in")
end

function set_ugrumy_mapspot (actor, npc)
    level_tasks.add_location (727, "mil_ugrumy_location") 
end

function remove_ugrumy_mapspot (actor, npc)
    level_tasks.remove_location (727, "mil_ugrumy_location") 
end

function mil_remove_base_spot (actor, npc)
    level_tasks.remove_location (733, "mil_freedom_location")
end

function mil_cook_subtask_completed (actor, npc)
    level_tasks.set_task_state (task.completed, "mil_freedom_rg6_task", 1)
end

function set_cook_subtask2_complete (actor, npc)
    level_tasks.set_task_state (task.completed, "mil_freedom_rg6_task", 2)
end

function send_artefact (npc, actor)
    dialogs.relocate_item_section(npc, "af_cristall", "in")
end

function send_desert_eagle (actor, npc)
    dialogs.relocate_item_section(npc, "wpn_desert_eagle", "in") 
end

function set_snipers_spots (npc, actor)
end

function killactor (actor, npc)
    xr_gulag.setGulagEnemy ("mil_dolg", actor)
end

function set_actor_enemy_for (sid)
    local npc = level_object_by_sid (sid)
    if npc == nil or npc:alive () == false then
       return 
    end    
    npc:set_relation (game_object.enemy, db.actor)
end

function transfer_scope (npc, actor)
    dialogs.relocate_item_section(npc, "wpn_addon_scope", "in") 
    dialogs.relocate_item_section(npc, "vodka", "out")
end


function actor_set_freedom (actor, npc)
    printf ("ACTOR NOW IN FREEDOM COMMUNITY")
    if db.actor then
       db.actor:set_character_community ("actor_freedom", 0, 0)
    end
end

function mil_leader_dialog_check (actor, npc)
	return has_alife_info("mil_lukash_delay") or has_alife_info("mil_lukash_dolg_task_complete")
end

--function mil_leader_dialog_job_end (actor, npc)
--	return (has_alife_info("mil_leader_quest2_complete") or has_alife_info("mil_leader_quest2_failed")) and (has_alife_info("mil_fblockpost_quest_reward") or has_alife_info("mil_fblockpost_quest_fail") or has_alife_info("mil_fblockpost_commander_dead"))
--end

function actor_have_dolg_pda(first_speaker, second_speaker)
  	return first_speaker:object("dolg_pda") ~= nil or first_speaker:object("svoboda_pda") ~= nil
end

function give_dolg_pda(actor, npc)
	
	--Тип награды
	local reward_types = {"ammo_12x70_buck", "ammo_12x76_zhekan", "ammo_12x76_dart", "ammo_5.56x45_ss190", "ammo_5.56x45_ap", "ammo_9x18_fmj", "ammo_9x18_pmm", "ammo_9x19_fmj", "ammo_9x19_pbp", "ammo_7.62x54_7h1", "ammo_7.62x54_ap", "ammo_7.62x54_7h14", "ammo_9x39_pab9", "ammo_9x39_ap", "ammo_9x39_sp5", "ammo_gauss", "ammo_11.43x23_fmj", "ammo_11.43x23_hydro", "ammo_og-7b", "grenade_rgd5", "grenade_f1", "grenade_gd-05", "ammo_m209", "ammo_vog-25", "wpn_addon_scope_susat", "wpn_addon_silencer", "wpn_addon_grenade_launcher_m203"}

	--Перебираем инвентарь ГГ.
	function item(actor)
		actor:iterate_inventory(item_trns_reward, actor)
	end
	
	--Удаляем предмет и получаем случайную награду из reward_types
	function item_trns_reward(actor, item)
		if item:section() == "dolg_pda" then
			dialogs.relocate_item_section(actor, reward_types[math.random(#reward_types)], "in")
			dialogs.relocate_money(actor, 100, "in")
			alife():release(alife():object(item:id()), true)
		elseif item:section() == "svoboda_pda" then
			alife():release(alife():object(item:id()), true)
		end
	end
	
	item(actor)
end

--db.actor:set_character_community("actor_dolg", 0, 0)