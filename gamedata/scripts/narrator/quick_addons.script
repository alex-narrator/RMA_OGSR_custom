-- -*- mode: lua; coding: windows-1251-dos -*-
function attach(sm)
	sm:subscribe({signal = "on_key_press",   		fun = this.on_key_press})
end

local quick_addon_action = {
	--[key_bindings.kQUICK_SCOPE] = true,
	--[key_bindings.kQUICK_SILENCER] = true,
}

function on_key_press(key, game_action)
	if level.main_input_receiver() then
	return end
	
	if not actor_hands_free() then
	return end
	
	local act_item = actor:active_item()
	local act_wpn = act_item and act_item:get_weapon() or nil
	
	if not act_wpn then
	return end
	
	if not quick_addon_action[game_action] then
	return end
	
	local act_wpn_m = act_item:get_weapon_m()	
	
	local for_scope = game_action == key_bindings.kQUICK_SCOPE
	
	local addon_type = for_scope and addon.scope or addon.silencer
	local function check_type(item) return for_scope and (item:is_scope() or item:is_binoculars()) or item:is_silencer() end
	
	if act_wpn:is_addon_attached(addon_type) and act_wpn:addon_attachable(addon_type) then
		local addon_sect = act_wpn:get_addon_name(addon_type)
		actor:hide_weapon()
		level.add_call(
			function()
				return not actor:active_item()
			end,
			function()
				--act_wpn_m:detach_addon(addon_sect, true)
				detach_addon(act_item, addon_sect)
				actor_break_sprint()
				xr_sound.get_safe_sound_object([[interface\inv_detach_addon]]):play_no_feedback(actor, sound_object.s2d, 0, vector(), 1.0)
				actor:restore_weapon()
			end
		)
	else
		if act_wpn:addon_attachable(addon_type) and not act_wpn:is_addon_attached(addon_type) then
			local _type = for_scope and "scope" or "silencer"
			local addons = read_if_exists(sys_ini, "string", act_item:section(), _type.."_name")
			local addons_list = split_string(addons, ",")
			for k,addon_sect in pairs(addons_list) do
				local item = actor:object(addon_sect)
				local iitem = item and item:get_inventory_item()
				if item and check_type(item) and act_wpn_m:can_attach_addon(iitem) then
					actor:hide_weapon()
					level.add_call(
						function()
							return not actor:active_item()
						end,
						function()
							--act_wpn_m:attach_addon(iitem, true)
							attach_addon(act_item, item)
							actor_break_sprint()
							xr_sound.get_safe_sound_object([[interface\inv_detach_addon]]):play_no_feedback(actor, sound_object.s2d, 0, vector(), 1.0)
							actor:restore_weapon()
						end
					)
					break
				end
			end
		end
	end
end