function attach(sm)
	sm:subscribe({signal = "on_death",   fun = this.send_tip})
end

local zone_sect_alias = {
	["zone_ameba"] = "zone_ameba",
	["zone_ameba1"] = "zone_ameba1",
	--
	["zone_burning_fuzz"] = "zone_burning_fuzz",
	["zone_burning_fuzz1"] = "zone_burning_fuzz1",
	["zone_burning_fuzz_weak"] = "zone_burning_fuzz_weak",
	--
	["zone_buzz"] = "zone_buzz",
	["zone_buzz_weak"] = "zone_buzz_weak",
	["zone_buzz_average"] = "zone_buzz_average",
	["zone_buzz_strong"] = "zone_buzz_strong",
	--
	["zone_gravi_zone"] = "zone_gravi_zone",
	["zone_gravi_zone_weak"] = "zone_gravi_zone_weak",
	["zone_gravi_zone_weak_noart"] = "zone_gravi_zone_weak_noart",
	["zone_gravi_zone_average"] = "zone_gravi_zone_average",
	["zone_gravi_zone_strong"] = "zone_gravi_zone_strong",
	--
	["zone_campfire_mp_nolight"] = "zone_campfire_mp_nolight",
	["zone_campfire_grill"] = "zone_campfire_grill",
	["zone_flame"] = "zone_flame",
	["zone_zhar"] = "zone_zhar",
	["zone_flame_small"] = "zone_flame_small",
	--
	["zone_emi"] = "zone_emi",
	["zone_mine_field"] = "zone_mine_field",
	["zone_death"] = "zone_death",
	["zone_monolith"] = "zone_monolith",
	["zone_sarcofag"] = "zone_sarcofag",
	["zone_no_gravity"] = "zone_no_gravity",
	["zone_rusty_hair"] = "zone_rusty_hair",
	--
	["zone_mincer"] = "zone_mincer",
	["zone_mincer_weak"] = "zone_mincer_weak",
	["zone_mincer_weak_noart"] = "zone_mincer_weak_noart",
	["zone_mincer_average"] = "zone_mincer_average",
	["zone_mincer_strong"] = "zone_mincer_strong",
	--	
	["zone_mosquito_bald"] = "zone_mosquito_bald",
	["zone_mosquito_bald_weak"] = "zone_mosquito_bald_weak",
	["zone_mosquito_bald_weak_noart"] = "zone_mosquito_bald_weak_noart",
	["zone_mosquito_bald_strong"] = "zone_mosquito_bald_strong",
	["zone_mosquito_bald_strong_noart"] = "zone_mosquito_bald_strong_noart",
	--
	["zone_radioactive"] = "zone_radioactive",
	["zone_radioactive_weak"] = "zone_radioactive_weak",
	["zone_radioactive_average"] = "zone_radioactive_average",
	["zone_radioactive_strong"] = "zone_radioactive_strong",
	--
	["zone_teleport"] = "zone_teleport",
	["zone_teleport_out"] = "zone_teleport_out",
	["zone_teleport_monolith"] = "zone_teleport_monolith",
	--
	["torrid_zone"] = "torrid_zone",
	["fireball_zone"] = "fireball_zone",
	--
	["zone_witches_galantine"] = "zone_witches_galantine",
	["zone_witches_galantine_weak"] = "zone_witches_galantine_weak",
	["zone_witches_galantine_average"] = "zone_witches_galantine_average",
	--
	["zone_zharka_static"] = "zone_zharka_static",
	["zone_zharka_static_weak"] = "zone_zharka_static_weak",
	["zone_zharka_static_average"] = "zone_zharka_static_average",
	["zone_zharka_static_strong"] = "zone_zharka_static_strong",
}

local species_alias = {
	["dog"] = "Blind",
	["pseudodog"] = "Pseudodog",
	["boar"] = "Boar",
	["flesh"] = "Flesh",
	["bloodsucker"] = "Bloodsucker",
	["controller"] = "Controller",
	["snork"] = "Snork",
	["zombie"] = "Zombie",
	["tushkano"] = "Tushkano",
	["poltergeist"] = "Poltergeist",
	["chimera"] = "Chimera",
	["pseudogiant"] = "Pseudogiant",
}

local ini = system_ini()

function send_tip(victim, killer)
	local tip_header = game.translate_string("st_stalker_death") 						--/заголовок загальний
	local victim_header = game.translate_string("st_victim_header") 					--/заголовок загальний
	local victim_name = game.translate_string(victim:character_name()) 					--/ім'я жертви
	local victim_comm = "["..game.translate_string(victim:character_community()).."]" 	--/угруповання жертви
	local killer_header = game.translate_string("st_killer_header") 					--/заголовок причини смерті
	local killer_type = game.translate_string("st_death_reason_undefined") 				--/дефолтна причина смерті
	local killer_info = "" 																--/додаткова інфо про вбивцію
	local actor = db.actor
	
	if killer then
		if killer:id() == victim:id() then
			killer_type = game.translate_string("st_suicide")
			if killer:is_actor() and not has_alife_info("eliminate_gunslinger_done") then
				actor:give_info_portion("eliminate_gunslinger_done")
			end
		elseif killer:is_stalker() or killer:is_actor() then
			killer_type = game.translate_string(killer:character_name())
			killer_info = "["..game.translate_string(killer:character_community()).."]"
		elseif killer:is_monster() then
			killer_type = game.translate_string(species_alias[ini:r_string(killer:section(),"species")])
		elseif killer:is_anomaly() then
			killer_type = game.translate_string(killer:section())
		elseif killer:is_helicopter() then
			killer_type = game.translate_string("st_helicopter")			
		end
	end
	
	local news_text = "%c[red]"..tip_header.."\\n"..
	"%c[UI_orange]"..victim_header.." ".."%c[white]"..victim_name.." "..victim_comm.."\\n"..
	"%c[UI_orange]"..killer_header.." ".."%c[white]"..killer_type.." "..killer_info
	
	local rnd = math.random(1, 3)
	actor:give_game_news(news_text, "ui\\ui_actor_newsmanager_icons", Frect():set(83,188,83,47), rnd * 1000, show_time)
	xr_sound.get_safe_sound_object([[device\pda\pda_tip]]):play(actor, rnd, sound_object.s2d)
end