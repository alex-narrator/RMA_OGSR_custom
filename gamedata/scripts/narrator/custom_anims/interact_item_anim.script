local actor_obj = get_actor_obj()
local is_playing = false
local hud_sect = "pickup_hud"
local hud_effector_id = 5559
local console = get_console()
local need_crosshair_hard = false

function play()
	if is_playing then
	return end
		
	is_playing = true
	actor_obj:block_action(key_bindings.kUSE)
	block_non_move_action(true)
	
	if console:get_string("hud_crosshair_hard") == "on" then
		console:execute("hud_crosshair_hard 0")
		need_crosshair_hard = true
	end
		
	local wpn = actor:active_item() and actor:active_item():get_weapon()
	if wpn and wpn.zoom_mode then
		wpn:zoom_out()
	end
	
	game.play_hud_anm("camera_effects\\item_use\\two_handed_weapon_effect.anm", 0, 1.4, 1, false)
	game.play_hud_motion(1, hud_sect, "anm_use", false, 1, false)
	local eff_name = read_if_exists(sys_ini, "r_string", hud_sect, "hud_effector", nil)
	level.add_complex_effector(eff_name, hud_effector_id)
	
	xr_sound.get_safe_sound_object("interface\\item_usage\\pickup",sound_object.s2d):play_at_pos(actor,actor:position())
	
	add_time_delayed_action(
		read_if_exists(sys_ini, "r_float", hud_sect, "use_delay", 0.7),
		function() 
			block_non_move_action(false)
			actor_obj:unblock_action(key_bindings.kUSE)
			level.send_event_key_press(bind_to_dik(key_bindings.kUSE))
			level.send_event_key_release(bind_to_dik(key_bindings.kUSE))
			is_playing = false
			if need_crosshair_hard then
				console:execute("hud_crosshair_hard 1")
				need_crosshair_hard = false
			end
		end
	)
end