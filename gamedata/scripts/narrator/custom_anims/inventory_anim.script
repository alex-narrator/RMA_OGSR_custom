function attach(sm)
	sm:subscribe({signal = "on_inventory_show", fun = this.on_show})
	sm:subscribe({signal = "on_inventory_hide", fun = this.on_hide})
	sm:subscribe({signal = "on_key_press",   	fun = this.on_key_press})
end

local actor_obj = get_actor_obj()
local SHOW_INVENTORY = false

function on_key_press(key, game_action)
	if game_action ~= key_bindings.kINVENTORY or 
		level.main_input_receiver() or
		SHOW_INVENTORY
	then return end
	
	actor_obj:block_action(key_bindings.kINVENTORY)
	actor:hide_weapon(true)
	
	level.add_call(
		function() 
			return actor:active_slot() == NO_ACTIVE_SLOT
		end,
		function() 
			backpack.play_effects(true)
			level.add_call(
				function()
					return game.hud_motion_allowed()
				end,
				function()
					SHOW_INVENTORY = true
					actor_obj:unblock_action(key_bindings.kINVENTORY)
					level.send_event_key_press(bind_to_dik(key_bindings.kINVENTORY))
					level.send_event_key_release(bind_to_dik(key_bindings.kINVENTORY))
				end
			)
		end
	)
end

function on_show()
	backpack.play_anim(3)
end

function on_hide()
	backpack.play_effects(false)
	SHOW_INVENTORY = false
	level.add_call(
		function()
			return game.hud_motion_allowed()
		end,
		function()
			actor:restore_weapon(true)
		end
	)
end