-- -*- mode: lua; coding: windows-1251-dos -*-
local cut_snd = [[interface\item_usage\harvest_use]]
local take_snd = [[interface\item_usage\harvest_use_success]]
local effects = {
	["loot"] = {
		effect = [[camera_effects\item_use\harvest_loot.anm]],
		id = 8997,
	},
	["skin"] = {
		effect = [[camera_effects\item_use\harvest_skin_use.anm]],
		id = 8998
	},
	["lean"] = {
		effect = [[camera_effects\item_use\harvest_lean_down_main.anm]],
		id = 8999
	},
}
local meat_type = {
	default 	= "harv_meat_hud",
	bloodsucker = "harv_meat_krovosos_hud",
	boar 		= "harv_meat_boar_hud",
	burer 		= "harv_meat_meat_hud",
	cat 		= "harv_meat_meat_hud",
	chimera 	= "harv_meat_himera_hud",
	controller 	= "harv_meat_meat_hud",
	dog 		= "harv_meat_dog_hud",
	flesh 		= "harv_meat_flesh_hud",
	fracture 	= "harv_meat_meat_hud",
	giant 		= "harv_meat_meat_hud",
	poltergeist = "harv_meat_polter_hud",
	pseudodog 	= "harv_meat_pseudodog_hud",
	rat 		= "harv_meat_tushkan_hud",
	snork 		= "harv_meat_snork_hud",
	tushkano 	= "harv_meat_tushkan_hud",
	zombie 		= "harv_meat_zombie_hud",
}

function play_harvest(monster)
	local knife = actor:active_item()
	local cond_dec = read_if_exists(sys_ini, "r_float", monster:section(), "knife_harvest_cond_k", 1) * 
						read_if_exists(sys_ini, "r_float", knife:section(), "condition_shot_dec_on_hit", 0)
	
	local meat_hud = meat_type[read_if_exists(sys_ini, "r_string", monster:section(), "species", "default")]
	
	level.disable_input()
	backpack.force_crouch(true)
	game.play_hud_motion(2, "harv_"..get_hud_sect(knife), "anm_show", true, 1, true)
	for _,v in pairs(effects) do
		level.add_cam_effector(v.effect, v.id, false, "")
	end
	xr_sound.get_safe_sound_object(cut_snd, sound_object.s2d):play_at_pos(actor,actor:position())
	level.add_call(
		function()
			return game.hud_motion_allowed()
		end,
		function()
			game.play_hud_motion(2, meat_hud, "anm_show", true, 1, true)
			level.add_cam_effector(effects["loot"].effect, effects["loot"].id, false, "")
			xr_sound.get_safe_sound_object(take_snd, sound_object.s2d):play_at_pos(actor,actor:position())
			level.add_call(
				function()
					return game.hud_motion_allowed()
				end,
				function()
					for i = 0, monster:ruck_count() - 1 do
						local item = monster:item_in_ruck(i)
						if item then
							knife:change_condition(-cond_dec)
							monster:transfer_item(item, actor)
							news_manager.item_tip(item, "harvest")
						end
					end
					backpack.force_crouch(false)
					level.enable_input()
				end
			)
		end
	)
end