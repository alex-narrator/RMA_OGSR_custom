-- -*- mode: lua; coding: windows-1251-dos -*-
function attach(sm)
	sm:subscribe({signal = "on_before_first_update", 	fun = this.on_before_first_update})
	sm:subscribe({signal = "on_save",   				fun = this.on_save})
	sm:subscribe({signal = "on_load",   				fun = this.on_load})	
	--sm:subscribe({signal = "on_new_game_start", 		fun = this.on_new_game_start})
end

local fix_funcs = {
	function() medkit_model_spawn() end,
	function() esc_bridge_anomaly_spawn() end,
}

local last_fix_called = 0
function on_save(packet)
	xr_vars.save_var("last_fix_called", last_fix_called)
end
function on_load(reader)
	last_fix_called = xr_vars.load_var("last_fix_called", last_fix_called)
end

function on_before_first_update()
	local fix_to_call = last_fix_called + 1
	for i = fix_to_call, table.size(fix_funcs) do
		fix_funcs[i]()
		last_fix_called = i
		log3("~call fix function %s", i)
	end
end

function medkit_model_spawn()
	local sobj = alife():object("esc_medkit")
	if sobj and sobj.parent_id == 65535 then
		local pos = sobj.position
		pos.y = pos.y + 0.1
		sobj:set_position(pos)
	end
end

function esc_bridge_anomaly_spawn()
	local anom = alife():story_object( story_ids.esc_bridge_anomaly )
	if anom then
	return end
	local spawn_pos = vector():set(53.722770690918, 20.354343414307, 156.74801635742)
	local spawn_dir = vector()
	local level_name = "l01_escape"
	local spawn_sect = "zone_mincer_strong_noart"
	local radius = 5
	local se_obj = spawn_to_level(spawn_sect, spawn_pos, level_name, spawn_dir)
	alife():assign_story_id(se_obj.id, 90)
	local pk = get_netpk( se_obj, 1 )
	local data = pk:get()
	data.restrictor_type = 0
	local offset = vector()
	data.shapes:addSphere(radius, offset)
	pk:set( data )
end