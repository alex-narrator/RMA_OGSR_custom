-- -*- mode: lua; coding: windows-1251-dos -*-
function attach(sm)
	sm:subscribe({signal = "on_save",   				fun = this.on_save})
	sm:subscribe({signal = "on_load",   				fun = this.on_load})
	sm:subscribe({signal = "on_update",   				fun = this.on_update})
	sm:subscribe({signal = "on_weapon_fire",   			fun = this.on_weapon_fire})
	sm:subscribe({signal = "on_hud_state_switch",   	fun = this.on_state_switch})
end

local stamina = 1
local stamina_dec = -1 / (read_if_exists(sys_ini, "r_u32", "actor_condition", "stamina_dec_time", 6) * 1000)
local stamina_inc = 1 / (read_if_exists(sys_ini, "r_u32", "actor_condition", "stamina_inc_time", 6) * 1000)
local RECOIL_K = 0.1
local stamina_k = 1

function on_save(packet)
	xr_vars.save_var(script_name(), stamina)
end

function on_load(reader)
	stamina = xr_vars.load_var(script_name(), stamina)
end

function on_update(delta)
	local diff = weapon_hardhold.get_hard_hold() and stamina_dec * stamina_k or (stamina_inc / stamina_k / (1 + somnolence.get_val()))
	change_val(diff * delta)
end

function on_weapon_fire(wpn, pos, vel)
	local recoil = sys_ini:r_float(wpn:section(), "cam_dispersion") * RECOIL_K
	change_val(-recoil)
end

function change_val(val)
	if is_god_mode() then
	return end
	stamina = stamina + val
	stamina = math.clamp(stamina, 0, 1)
end

function get_val()
	return stamina
end

local process_states = {
	[global_flags.eShowing] = true,
	[global_flags.eHidden] = true,
}
function on_state_switch(item, state, old_state)
	if not process_states[state] or not item:get_weapon_m() then
	return end
	stamina_k = state == global_flags.eShowing and read_if_exists(sys_ini, "r_float", item:section(), "control_inertion_factor", 1) or 1
	--log3("~stamina_k %s", stamina_k)
end