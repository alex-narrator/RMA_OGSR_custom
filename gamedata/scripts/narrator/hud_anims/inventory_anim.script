-- -*- mode: lua; coding: windows-1251-dos -*-
function attach(sm)
	sm:subscribe({signal = "on_actor_menu_show", fun = this.on_show})
	sm:subscribe({signal = "on_actor_menu_hide", fun = this.on_hide})
	sm:subscribe({signal = "on_key_press",   	fun = this.on_key_press})
end

local ANIM_PLAYING = false

local subscribed = false

function subscribe()
	if not subscribed then
		subscribed = {
			--{signal = "on_slot", fun = this.on_to_slot},
			-- {signal = "on_ruck", fun = this.on_from_slot},
			-- {signal = "on_drop", fun = this.on_from_slot},
		}
		local sm = ogse_signals.get_mgr()
		for _, s in ipairs(subscribed) do
			sm:subscribe(s)
		end
	end
end

function unsubscribe()
	if subscribed then
		local sm = ogse_signals.get_mgr()
		for _, s in ipairs(subscribed) do
			sm:unsubscribe(s)
		end
		subscribed = false
	end
end

function on_to_slot(item, prev_place)
	if not item:is_outfit() then return end
	add_update_delayed_action(1, function() backpack.play_anim(3) end)
end

function on_from_slot(item, prev_place)
	if prev_place ~= item_place.slot then return end
	if not item:is_outfit() then return end
	add_update_delayed_action(1, function() backpack.play_anim(3) end)
end

function on_key_press(key, game_action)
	if level.main_input_receiver() or
		game_action ~= key_bindings.kINVENTORY or
		_G.SCRIPT_ANIM_PLAYING or
		ANIM_PLAYING
	then return end
	
	-- if level.main_input_receiver() then
		-- if actor_menu:IsShown() then
			-- ui_actor_menu.ShowHideMenu()
		-- end
	-- return end
	
	--actor:hide_crosshair(true)
	
	block_non_move_action(true)
	
	actor:hide_weapon(backpack.play_fast())
	--_G.SCRIPT_ANIM_PLAYING = true
	ANIM_PLAYING = true
	
	level.add_call(
		function() 
			return not actor:active_item() and not actor:active_device()
		end,
		function() 
			backpack.play_effects(true)
			level.add_call(
				function()
					return game.hud_motion_allowed()
				end,
				function()
					--level.start_stop_menu(inv_wnd, true)
					ui_actor_menu.ShowHideMenu("inventory")
				end
			)
		end
	)
end

function on_show(mode)
	if mode ~= "inventory" then
	return end
	block_non_move_action(false)
	backpack.play_anim(3)
	--_G.SCRIPT_ANIM_PLAYING = false
	ANIM_PLAYING = false
	subscribe()
end

function on_hide(mode)
	if mode ~= "inventory" then
	return end
	backpack.play_effects(false)
	block_non_move_action(true)
	unsubscribe()
	level.add_call(
		function()
			return game.hud_motion_allowed()
		end,
		function()
			block_non_move_action(false)
			actor:restore_weapon(backpack.play_fast())
			--actor:hide_crosshair(false)
		end
	)
end