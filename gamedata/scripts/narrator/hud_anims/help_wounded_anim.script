-- -*- mode: lua; coding: windows-1251-dos -*-
function attach(sm)
	sm:subscribe({signal = "on_heal_wounded", 	fun = this.on_heal_wounded})
end

local hud_effector_id = 5555

local ANIM_FAST = false
local hud_sect = "heal_wounded_hud"
local height_diff = 1

function on_heal_wounded(npc)
	add_time_delayed_action(0.04, function() play(npc) end)
end

function play(npc)
	actor:hide_weapon(true)
	level.disable_input()
	actor:hide_crosshair(true)
	
	local pos = npc:center()
	pos.y = pos.y + 0.25
	aim_camera_to_pos(pos)	
	
	level.add_call(
		function()
			return not actor:active_item() and not actor:active_device()
		end,
		function()
			game.play_hud_motion(2, hud_sect, "anm_use", false, 1, true)
			_G.SCRIPT_ANIM_PLAYING = true
			play_hud_sound(hud_sect)
			if device().cam_pos.y - npc:center().y > height_diff then
				play_hud_effector(hud_sect)
			end
			
			add_time_delayed_action(
				read_if_exists(sys_ini, "r_float", hud_sect, "use_delay", 2.5),
				function() healing_wounded.heal(npc) end
			)
			
			level.add_call(
				function()
					return game.hud_motion_allowed()
				end,
				function()
					_G.SCRIPT_ANIM_PLAYING = false
					actor:restore_weapon(true)
					level.enable_input()
					actor:hide_crosshair(false)
				end
			)				
		end
	)	
end

function play_hud_sound(sect)
	local snd_name = read_if_exists(sys_ini, "r_string", sect, "hud_sound", nil)
	if snd_name then
		local sound = xr_sound.get_safe_sound_object(snd_name)
		sound:play_no_feedback(actor, sound_object.s2d, 0, vector(), 1.0)
	end
end

function play_hud_effector(sect)
	local eff_name = read_if_exists(sys_ini, "r_string", sect, "hud_effector", nil)
	if eff_name then
		level.remove_complex_effector(hud_effector_id)
		level.add_complex_effector(eff_name, hud_effector_id)
	end
end