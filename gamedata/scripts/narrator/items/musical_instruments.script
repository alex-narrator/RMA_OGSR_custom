-- -*- mode: lua; coding: windows-1251-dos -*-
local hud_effector_id = 5555

local instruments = {
	["guitar"] = {
		sound_prefix = [[characters_voice\music\guitar\guitar_]], 
		hud = "guitar_hud",
		max_rnd = 13,
	},
	["harmonica"] = {
		sound_prefix = [[characters_voice\music\harmonica\harmonica_]], 
		hud = "harmonica_hud",
		max_rnd = 9,
	},	
}

local sm = ogse_signals.get_mgr()
local subscribed = false
local play_anim = false
local sound = false

local stop_keys = {
	[key_bindings.kUSE] = true,
	[key_bindings.kINVENTORY] = true,
}

function play(instrument)
	if level.main_input_receiver() then
		level.start_stop_menu(level.main_input_receiver(), true)
	end
	
	actor:hide_weapon()
	block_non_move_action(true)
	actor:hide_crosshair(true)
	if not subscribed then
		subscribed = { signal = "on_key_press", fun = this.on_key_press }
		sm:subscribe( subscribed )
	end
	hud_add_info_message("item_usage", "st_music_stop", 99)
	
	level.add_call(
		function() 
			return actor_hands_free()
		end,
		function() 
			play_music(instrument)
		end
	)
end

function play_music(instrument)
	local data = instruments[instrument]
	game.play_hud_motion(2, data.hud, "anm_play", true, 1, true)
	sound = xr_sound.get_safe_sound_object(data.sound_prefix..math.random(1, data.max_rnd))
	sound:play(actor, 0, sound_object.s2d)
	level.add_call(
		function()
			return not sound or not sound:playing()
		end,
		function()
			stop_music()
		end
	)	
end

function stop_music()
	if not sound then
	return end
	game.stop_hud_motion()
	restore_control()
	sound:stop()
	sound = false
end

function restore_control()
	hud_remove_info_message("item_usage")
	actor:restore_weapon()
	block_non_move_action(false)
	actor:hide_crosshair(true)
	if subscribed then
		subscribed = { signal = "on_key_press", fun = this.on_key_press }
		sm:unsubscribe( subscribed )
		subscribed = false
	end
end

function on_key_press(key, game_action)
	if stop_keys[game_action] then
		stop_music()
	end
end

--//context menu
function can_play_instrument(item)
	for k,v in pairs(instruments) do
		if string.find(item:section(), k) then
			return true
		end
	end
	return false
end

function play_instrument(item)
	for k,v in pairs(instruments) do
		if string.find(item:section(), k) then
			play(k)
			return
		end
	end	
end

function can_play_guitar(item)
	return string.find(item:section(), "guitar")
end
function play_guitar(item)
	play("guitar")
end

function can_play_harmonica(item)
	log3("~item %s - res %s", item:section(), string.find(item:section(), "harmonica"))
	return string.find(item:section(), "harmonica")
end
function play_harmonica(item)
	play("harmonica")
end