-- -*- mode: lua; coding: windows-1251-dos -*-
function attach(sm)
	sm:subscribe({signal = "on_af_first_take", fun = this.on_af_first_take})
end

local hit_effector_id = 5595

local hit_types = {
	["burn"] 			= hit.burn,
	["shock"] 			= hit.shock,
	["strike"] 			= hit.strike,
	["wound"] 			= hit.wound,
	["radiation"] 		= hit.radiation,
	["telepatic"] 		= hit.telepatic,
	["chemical_burn"] 	= hit.chemical_burn,
	["explosion"] 		= hit.explosion,
	["fire_wound"] 		= hit.fire_wound,
	["wound2"] 			= hit.wound2,
	["phys_strike"] 	= hit.phys_strike,
}

function on_af_first_take(item)
	local sect = item:section()
	local hit_type = hit_types[read_if_exists(sys_ini, "r_string", sect, "hit_type", nil)]
	if not hit_type then
		log3("~not hit type %s", item:name())
	return end	
	local hit_power = read_if_exists(sys_ini, "r_float", sect, "hit_power", 0.1)
	
	hit_power = hit_power + hit_power * level.get_game_difficulty() * 0.25
	
	local hit_effector = read_if_exists(sys_ini, "r_string", sect, "hit_effector", nil)
	
	local h = hit()
	h.power = hit_power
	h.draftsman = item
	h.type = hit_type
	actor:hit(h)
	
	if hit_effector then
		level.add_complex_effector(hit_effector, hit_effector_id)
	end
	
	local drop_chance = math.random()
	--log3("~drop_chance %s", drop_chance)
	if drop_chance < hit_power then
		actor:drop_item(item)
	end
	
	if not has_alife_info("enc_artefact_byte") then
		outfit_anim.play_outfit("inspect")
		actor:give_info_portion("enc_artefact_byte")
		news_manager.send_tip( actor, "tips_trader_artefact_byte", 2, "trader", 15000 )
	end		
end