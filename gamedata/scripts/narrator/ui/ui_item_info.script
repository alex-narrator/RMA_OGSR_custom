function attach(sm)
	sm:subscribe({signal = "ui_item_info_callback",   fun = this.add_custom_info})
end

function add_custom_info(UIDesc, obj)
	if is_power_device(obj) then
		attach_power_params(UIDesc, obj:binded_object())
	end
end

function attach_power_params(UIDesc, bind_obj)
	local xml = CScriptXmlInit()
	xml:ParseFile("script_overlays\\power_params.xml")
	local power_params = xml:InitStatic("power_params", UIDesc)
	
	local cap_power = xml:InitStatic("power_params:cap_power", power_params)
	cap_power:SetText(game.translate_string("st_power_level"))
	
	local cap_work_time = xml:InitStatic("power_params:cap_work_time", power_params)
	local worktime_text = string.format("%s %s %s", game.translate_string("st_work_time"), bind_obj:get_work_time(), game.translate_string("st_time_hour"))
	if bind_obj:power_source_detachable() then
		worktime_text = worktime_text..string.format(" [%s]", game.translate_string(get_inv_name(bind_obj:get_power_sect())))
	end
	cap_work_time:SetText(worktime_text)
	
	local power_progress = xml:InitProgressBar("power_params:progress_power", power_params)
	local power_level = bind_obj:get_power_level()
	power_progress:SetProgressPos(power_level)
end