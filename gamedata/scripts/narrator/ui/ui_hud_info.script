-- -*- mode: lua; coding: windows-1251-dos -*-
function attach(sm)
	sm:subscribe({signal = "on_key_press",   	fun = this.on_key_press})
	sm:subscribe({signal = "on_hud_state_switch",   fun = this.on_state_switch})
end

local info_action = {
	[key_bindings.kCHECKGEAR] = true,
	[key_bindings.kCHECKACTIVEITEM] = true,
	[key_bindings.kWPN_FUNC] = true,
}

local info_state = {
	[global_flags.eReload] = true,
	[global_flags.eSwitch] = true,
}

local ACTIVE_ITEM_INFO_TTL 	= read_if_exists(sys_ini, "r_u32", "actor", "active_item_info_ttl", 3)
local GEAR_INFO_TTL 		= read_if_exists(sys_ini, "r_u32", "actor", "gear_info_ttl", 3)

local act_item = false
local act_item_2 = false

function on_key_press(key, game_action)
	if level.main_input_receiver() or 
		not info_action[game_action] or 
		not actor_hands_free() then
	return end
	
	act_item = actor:active_item()
	act_item_2 = actor:active_device()
	
	if game_action == key_bindings.kCHECKGEAR then
		try_show_gear_info()
	else
		try_show_active_item_info()
	end
end

function on_state_switch(item, state, old_state)
	if not info_state[state] then
	return end
	act_item = item
	try_show_active_item_info()
end

function try_show_active_item_info()
	if (not act_item and not act_item_2) --or SHOW_ACTIVE_ITEM_INFO
	then return end
			
	if act_item_2 then
		add_update_delayed_action(1,
			function()
				local det_mode = ""
				if act_item_2:get_detector() and act_item_2:get_detector():can_switch_modes() then
					det_mode = act_item_2:get_detector():is_af_mode() and "st_af_mode" or "st_zone_mode"
				end
				local power = is_power_device(act_item_2) and act_item_2:binded_object():get_power_level() or 1
				local str = string.format("%s [%.0f%s]\\n%s ", game.translate_string(get_inv_name(act_item_2:section())), power*100,"%", game.translate_string(det_mode))
				hud_add_info_message("item_usage", str, ACTIVE_ITEM_INFO_TTL)
			end
		)
	end
	_G.SHOW_ACTIVE_ITEM_INFO = true
	add_time_delayed_action(ACTIVE_ITEM_INFO_TTL, hide_item_info)
end

function hide_item_info()
	_G.SHOW_ACTIVE_ITEM_INFO = false
end

function try_show_gear_info()
	-- if SHOW_GEAR_INFO then
	-- return end
	
	_G.SHOW_GEAR_INFO = true
	add_time_delayed_action(GEAR_INFO_TTL, hide_gear_info)
end

function hide_gear_info()
	_G.SHOW_GEAR_INFO = false
end