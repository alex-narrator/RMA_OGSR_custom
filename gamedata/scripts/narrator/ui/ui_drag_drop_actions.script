-- -*- mode: lua; coding: windows-1251-dos -*-
function attach(sm)
	sm:subscribe({signal = "inv_drag_drop", fun = this.on_drag_drop})
end

function on_drag_drop(obj, drop_on_obj)
	if obj:id() == drop_on_obj:id() then
	return end
	
	local function update_cell_items()
		local ci = actor_menu:GetCellItem(obj)
		if ci then
			ci:ForceUpdate()
		end
		local drop_on_ci = actor_menu:GetCellItem(drop_on_obj)
		if drop_on_ci then
			drop_on_ci:ForceUpdate()
		end	
	end
	
	--//драгдроп на предмет в слоті актора
	if parent_is_actor(obj) and actor:is_in_slot(drop_on_obj) then
		local slots = read_if_exists(sys_ini, "r_string", obj:section(), "slot", nil)
		if slots then
			slots = split_string(slots, ",", true)
			for k,i in pairs(slots) do
				if i == drop_on_obj:get_slot() then
					actor:move_to_ruck(drop_on_obj)
					obj:set_slot(i)
					actor:move_to_slot(obj)
					return
				end
			end
		end
	end
	--//драгдроп на предмет на поясі
	if parent_is_actor(obj) and actor:is_on_belt(drop_on_obj) then
		if read_if_exists(sys_ini, "r_bool", obj:section(), "belt", false) then
			local params_obj = CIconParams(obj:section())
			local params_drop_on_obj = CIconParams(drop_on_obj:section())
			if params_obj.grid_width <= params_drop_on_obj.grid_width then
				actor:move_to_ruck(drop_on_obj)
				actor:move_to_belt(obj)
				return
			end
		end
	end

	if not drop_on_obj:get_weapon() or actor:is_in_slot(drop_on_obj) then
		if drop_on_obj:is_direct_reload(obj) then
			if drop_on_obj:get_weapon_ammo() then
				local snd_name = read_if_exists(sys_ini, "r_string", drop_on_obj:section(), "load_sound", nil)
				if snd_name then
					xr_sound.get_safe_sound_object(snd_name):play_no_feedback(actor, sound_object.s2d, 0, vector(), 1.0)
				end				
			end
		end
	end

	local iitem = obj:get_inventory_item()
	local drop_on_iitem = drop_on_obj:get_inventory_item()
	
	if drop_on_iitem:can_attach_addon(iitem) then
		if drop_on_iitem:attach_addon(iitem, true) then
			xr_sound.get_safe_sound_object([[interface\inv_attach_addon]]):play(actor, 0, sound_object.s2d)
		end
	else
		detach_addon_type = nil
		for k, addon in pairs(ADDON_TYPES) do
			local addons = read_if_exists(sys_ini, "r_string", drop_on_obj:section(), addon.."_name", nil)
			local addons_list = split_string(addons, ",")
			if addons_list then
				for _, addon_sect in pairs(addons_list) do
					if addon_sect == obj:section() then
						detach_addon_type = k-1
						break
					end
				end		
			end
		end
		if detach_addon_type and drop_on_obj:get_weapon() then
			detach_addon(drop_on_obj, drop_on_obj:get_weapon():get_addon_name(detach_addon_type))
			if drop_on_iitem:attach_addon(iitem, true) then
				xr_sound.get_safe_sound_object([[interface\inv_attach_addon]]):play(actor, 0, sound_object.s2d)
			end			
		end
	end
	
	update_cell_items()
end