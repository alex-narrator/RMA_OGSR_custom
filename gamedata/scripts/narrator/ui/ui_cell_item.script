-- -*- mode: lua; coding: windows-1251-dos -*-
local color_default 	= GetARGB(0, 255, 255, 255)
local color_focused 	= GetARGB(70, 200, 200, 200)

local back_texture 		= "ui_inv_back_green"

class "UICellItem" (CUIScriptWnd)

function UICellItem:__init(owner, item, pos_x, pos_y, width, height) super()
	self.owner = owner
	self.item = item
	self.childs = {}
	self.sm = ogse_signals.get_mgr()
	self:Subscribe()
	self:InitControls(pos_x, pos_y, width, height)
end

function UICellItem:DetachWnd()
	self:ClearCallbacks()
	self.owner:DetachChild(self)
	self:Unsubscribe()
end

function UICellItem:Subscribe()
	self.subscribed = false
	if not self.subscribed then
		self.subscribed = {
			-- {signal = "on_cell_item_select", self = self, fun = self.OnCellItemSelect},
			-- {signal = "on_cell_item_focus", self = self, fun = self.OnCellItemFocus},
			-- {signal = "on_cell_item_focus_lost", self = self, fun = self.OnCellItemFocusLost},
		}
		for _, s in ipairs( self.subscribed ) do
			self.sm:subscribe( s )
		end
	end
end

function UICellItem:Unsubscribe()
	if self.subscribed then
		for _, s in ipairs( self.subscribed ) do
			self.sm:unsubscribe( s )
		end
		self.subscribed = false
	end
end

function UICellItem:InitControls(pos_x, pos_y, width, height)
	local params = CIconParams(self.item:section())	
	
	local icon_w = width * params.grid_width
	local icon_h = height * params.grid_height
	
	self.owner:AttachChild(self)
	self:Init(pos_x, pos_y, icon_w, icon_h)
	self:Show(true)

	self.back = CUIStatic()
	self:AttachChild(self.back)	
	self.back:Init(0, 0, icon_w, icon_h)
	self.back:SetStretchTexture(true)
	self.back:InitTexture(back_texture)
	self.back:Show(false)
	
	self.icon = CUIStatic()
	self:AttachChild(self.icon)	
	self.icon:Init(0, 0, icon_w, icon_h)
	self.icon:SetStretchTexture(true)
	params:set_shader(self.icon)
	
	local name = "cell_item"
	self:Register(self.icon, name)
	self:AddCallback(name, ui_events.STATIC_FOCUS_RECEIVED, function() self:OnFocusReceived() end, self)
	self:AddCallback(name, ui_events.STATIC_FOCUS_LOST, function() self:OnFocusLost() end, self)
	self:AddCallback(name, ui_events.WINDOW_LBUTTON_DOWN, function() self:OnLButtonDown() end, self)
	self:AddCallback(name, ui_events.WINDOW_RBUTTON_DOWN, function() self:OnRButtonDown() end, self)
	self:AddCallback(name, ui_events.WINDOW_LBUTTON_DB_CLICK, function() self:OnDBClick() end, self)
	
	self:OnIconShow()
end

function UICellItem:Update()
	CUIScriptWnd.Update(self)
	--self.sm:call("on_cell_item_update", self.item, self.icon)
end

function UICellItem:OnIconShow()
	self.sm:call("on_cell_item_show", self.item, self.icon)
end

function UICellItem:OnFocusReceived()
	self.back:Show(true)
	self.sm:call("on_cell_item_focus", self.item)
end

function UICellItem:OnFocusLost()
	self.back:Show(false)
	self.sm:call("on_cell_item_focus_lost", self.item)
end

function UICellItem:OnLButtonDown()
	self.sm:call("on_cell_item_select", self.item)
end

function UICellItem:OnRButtonDown()
	self.sm:call("on_cell_item_select", self.item)
end

function UICellItem:OnDBClick()
	self.sm:call("on_cell_item_db_click", self.item)
end

function UICellItem:GetChilds()
	return self.childs
end

function UICellItem:GetChildsCount()
	return table.size(self.childs)
end

function UICellItem:AddChild(item)
	if ui_inv_utils.similar_item(self.item, item) then
		if not self.childs[item] then
			self.childs[item] = true
			return true
		end
	end
	return false
end

function UICellItem:GetItem()
	return self.item
end