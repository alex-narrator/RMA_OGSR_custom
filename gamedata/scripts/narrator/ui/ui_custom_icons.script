-- -*- mode: lua; coding: windows-1251-dos -*-
function attach(sm)
	sm:subscribe({signal = "on_cell_item_update",   	fun = this.update_custom_icons})
	sm:subscribe({signal = "on_pickup_item_showing", 	fun = this.update_custom_icons})
end

function update_custom_icons(item, cell_item)
	local text = nil
	
	local ammo = item:get_weapon_ammo()
	if ammo and ammo:is_magazine() then
		text = string.format("%s/%s", ammo.box_curr, ammo.box_size)
		UpdateAmmoInBoxIcon(item, cell_item)
	end
	
	local eatable = item:get_eatable_item()
	if eatable and eatable.eat_start_portions_num > 1 then
		text = string.format("%s/%s", eatable.eat_portions_num, eatable.eat_start_portions_num)
	end
	
	local weapon_mag = item:get_weapon_m()
	if weapon_mag and weapon_mag.ammo_mag_size > 0 then
		text = string.format("%s/%s%s", weapon_mag.ammo_elapsed, weapon_mag.ammo_mag_size, (has_fire_modes(item) or item:get_gl_mode()) and weapon_mag:firemod_string() or "")
	end
	
	if item:get_container() and item:get_inventory_item():item_effect(effect.add_weight) > 0 then
		text = string.format("+%.0f%s", item:get_inventory_item():item_effect(effect.add_weight) * actor.inventory.max_weight, game.translate_string("st_kg"))
	end
	
	UpdateUpgrageIcon(item, cell_item)
	
	UpdateMarkedIcon(item, cell_item)
	
	UpdateAdditionalStatic(cell_item, text)
end

function UpdateAdditionalStatic(cell_item, text)
	if not text then
	return end
	
	local cell_item_custom = cell_item:FindChild("cell_item_custom")
	if cell_item_custom then
		cell_item_custom = cell_item_custom:GetCUIStatic()
		cell_item_custom:SetText(text)
		cell_item_custom:SetWndPos(cell_item:GetWidth() - cell_item_custom:GetWidth(), cell_item:GetHeight() - cell_item_custom:GetHeight())
	return end
	local xml = CScriptXmlInit()
	xml:ParseFile("inventory_new.xml")
	cell_item_custom = xml:InitStatic("cell_item_custom", cell_item)
	cell_item_custom:SetWindowName("cell_item_custom")
	cell_item_custom:SetText(text)
	cell_item_custom:SetWndPos(cell_item:GetWidth() - cell_item_custom:GetWidth(), cell_item:GetHeight() - cell_item_custom:GetHeight())
end

function GetOffset(offset_type, icon, parent_icon)
	if offset_type == "center" then
		return vector():set(
			(parent_icon:GetWidth() / 2) - (icon:GetWidth() / 2), 
			(parent_icon:GetHeight() / 2) - (icon:GetHeight() / 2), 
			0)
	elseif offset_type == "left_down" then
		return vector():set(
			0, 
			parent_icon:GetHeight() - icon:GetHeight(), 
			0)
	elseif offset_type == "left_top" then
		offset = vector()
	elseif offset_type == "right_top" then
		return vector():set(
			parent_icon:GetWidth() - icon:GetWidth(),
			0, 
			0)
	elseif offset_type == "right_down" then
		return vector():set(
			parent_icon:GetWidth() - icon:GetWidth(),
			parent_icon:GetHeight() - icon:GetHeight(), 
			0)				
	end
end

function UpdateAmmoInBoxIcon(item, cell_item)
	local ammo = item:get_weapon_ammo()
	local sect = item:section()
	local ammo_in_box = cell_item:FindChild("ammo_in_box")
	if ammo_in_box then
		ammo_in_box:Show(ammo.box_curr > 0)
		return
	end
	
	local params = CIconParams(ammo:ammo_sect())
	local cell_item_params = CIconParams(sect)
	
	local cell_w = cell_item:GetWidth() / cell_item_params.grid_width
	local cell_h = cell_item:GetHeight() / cell_item_params.grid_height
	local scale = read_if_exists(sys_ini, "r_float", sect, "ammo_icon_scale", 0.5)
	local width = params.grid_width * cell_w * scale
	local height = params.grid_height * cell_h * scale
	
	ammo_in_box = CUIStatic()
	params:set_shader(ammo_in_box)
	
	ammo_in_box:SetWidth(width)
	ammo_in_box:SetHeight(height)
	
	local offset = GetOffset(read_if_exists(sys_ini, "r_string", sect, "ammo_icon_offset", "center"), ammo_in_box, cell_item)

	ammo_in_box:SetWndPos(offset.x, offset.y)
	ammo_in_box:SetWindowName("ammo_in_box")
	cell_item:AttachChild(ammo_in_box)
end

function UpdateMarkedIcon(item, cell_item)
	local sect = item:section()
	local marked_icon = cell_item:FindChild("marked_icon")
	if marked_icon then
		marked_icon:Show(item.marked)
		return
	end
	if not item.marked then
	return end
	
	local marked_icon_sect = read_if_exists(sys_ini, "r_string", sect, "marked_icon_sect", nil)
	if not marked_icon_sect then
	return end
	
	local params = CIconParams(marked_icon_sect)
	local cell_item_params = CIconParams(sect)

	local cell_w = cell_item:GetWidth() / cell_item_params.grid_width
	local cell_h = cell_item:GetHeight() / cell_item_params.grid_height
	local width = params.grid_width * cell_w
	local height = params.grid_height * cell_h
	
	marked_icon = CUIStatic()
	params:set_shader(marked_icon)
	
	marked_icon:SetWidth(width)
	marked_icon:SetHeight(height)
	
	local offset = GetOffset(read_if_exists(sys_ini, "r_string", sect, "marked_icon_offset", "right_top"), marked_icon, cell_item)
	
	marked_icon:SetWndPos(offset.x, offset.y)
	marked_icon:SetWindowName("marked_icon")
	cell_item:AttachChild(marked_icon)	
end

function UpdateUpgrageIcon(item, cell_item)
	local sect = item:section()
	
	local upgrade_icon_sect = read_if_exists(sys_ini, "r_string", sect, "upgrade_icon_sect", nil)
	if not upgrade_icon_sect then
	return end
	
	local upgrade_icon = cell_item:FindChild("upgrade_icon")
	if upgrade_icon then
		local params = CIconParams(upgrade_icon_sect)
		local cell_item_params = CIconParams(sect)
		local cell_w = cell_item:GetWidth() / cell_item_params.grid_width
		local cell_h = cell_item:GetHeight() / cell_item_params.grid_height
		if cell_h/cell_w > 1.4 then
			cell_h = cell_item:GetWidth() / cell_item_params.grid_height * 1.3
			cell_w = cell_item:GetHeight() / cell_item_params.grid_width
		end		
		local width = params.grid_width * cell_w
		local height = params.grid_height * cell_h
		
		upgrade_icon:SetWidth(width)
		upgrade_icon:SetHeight(height)
		local offset = GetOffset(read_if_exists(sys_ini, "r_string", sect, "upgrade_icon_offset", "left_down"), upgrade_icon, cell_item)
		upgrade_icon:SetWndPos(offset.x, offset.y)
		return
	end
	
	local params = CIconParams(upgrade_icon_sect)
	local cell_item_params = CIconParams(sect)

	local cell_w = cell_item:GetWidth() / cell_item_params.grid_width
	local cell_h = cell_item:GetHeight() / cell_item_params.grid_height
	if cell_h/cell_w > 1.4 then
		cell_h = cell_item:GetWidth() / cell_item_params.grid_height * 1.3
		cell_w = cell_item:GetHeight() / cell_item_params.grid_width
	end	
	local width = params.grid_width * cell_w
	local height = params.grid_height * cell_h
	
	upgrade_icon = CUIStatic()
	params:set_shader(upgrade_icon)
	
	upgrade_icon:SetWidth(width)
	upgrade_icon:SetHeight(height)
	
	local offset = GetOffset(read_if_exists(sys_ini, "r_string", sect, "upgrade_icon_offset", "left_down"), upgrade_icon, cell_item)

	upgrade_icon:SetWndPos(offset.x, offset.y)
	upgrade_icon:SetWindowName("upgrade_icon")
	cell_item:AttachChild(upgrade_icon)	
	
	log3("kx %s", device().width / device().height)
end