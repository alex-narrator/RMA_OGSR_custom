-- -*- mode: lua; coding: windows-1251-dos -*-
function attach(sm)
	sm:subscribe({signal = "on_cell_item_update",   	fun = this.update_custom_icons})
	sm:subscribe({signal = "on_pickup_item_showing", 	fun = this.update_custom_icons})
	sm:subscribe({signal = "on_cell_item_show", 		fun = this.update_custom_icons})
end

function get_val_color(val)
	local color = ""
	if not val then
		return color
	end
	if val >= 0.95 then
		color = "%c[green]"
	elseif val <= 0.05 then
		color = "%c[red]"
	else
		color = "%c[UI_orange]"
	end
	return color
end

function update_custom_icons(item, cell_item, count)
	local text = nil
	local color = ""
	
	local ammo = item:get_weapon_ammo()
	if ammo and ammo:is_magazine() then
		color = get_val_color(ammo.box_curr / ammo.box_size)
		text = string.format("%s%s/%s", color, ammo.box_curr, ammo.box_size)
	end
	
	local eatable = item:get_eatable_item()
	if eatable and eatable.eat_start_portions_num > 1 then
		color = get_val_color(eatable.eat_portions_num / eatable.eat_start_portions_num)
		text = string.format("%s%s/%s", color, eatable.eat_portions_num, eatable.eat_start_portions_num)
	end
	
	local use_count = read_if_exists(sys_ini, "r_float", item:section(), "use_count", 0)
	if use_count > 1 then
		color = get_val_color(use_count*item:condition() / use_count)
		text = string.format("%s%.0f/%s", color, use_count*item:condition(), use_count)
	end
	
	local weapon_mag = item:get_weapon_m()
	if weapon_mag and weapon_mag.ammo_mag_size > 0 then
		color = get_val_color(weapon_mag.ammo_elapsed / weapon_mag.ammo_mag_size)
		text = string.format("%s%s/%s%s", color, weapon_mag.ammo_elapsed, weapon_mag.ammo_mag_size, get_fire_mode_str(item))
	end
	
	if item:get_container() and item:get_inventory_item():item_effect(effect.add_weight) > 0 then
		text = string.format("+%.0f%s", item:get_inventory_item():item_effect(effect.add_weight) * actor.inventory.max_weight, game.translate_string("st_kg"))
	end
	
	ui_inv_utils.UpdateAdditionalText(item, cell_item)
	ui_inv_utils.UpdateWpnIcons(item, cell_item)
	ui_inv_utils.UpdateAmmoInBoxIcon(item, cell_item)
	ui_inv_utils.UpdateArmorPlateIcon(item, cell_item)
	--ui_inv_utils.UpdateUpgrageIcon(item, cell_item)
	ui_inv_utils.UpdateLayerIcons(item, cell_item)
	ui_inv_utils.UpdatePdaLockIcon(item, cell_item)
	ui_inv_utils.UpdatePdaRankIcon(item, cell_item)
	--ui_inv_utils.UpdateMarkedIcon(item, cell_item)
	ui_inv_utils.UpdateQuestIcon(item, cell_item)
	--ui_inv_utils.UpdateConditionStatic(item, cell_item)
	ui_inv_utils.UpdateAdditionalStatic(cell_item, text)
	ui_inv_utils.UpdateCellItemCount(item, cell_item, count)
	ui_inv_utils.UpdateConditionProgress(item, cell_item)
end