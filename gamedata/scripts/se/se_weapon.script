local registred_items = {}

class "se_weapon" (cse_alife_item_weapon)
function se_weapon:__init (section) super (section)
end
function se_weapon:on_register()
	cse_alife_item_weapon.on_register( self )
	-- Регистрация в таскменеджере
	task_manager.get_random_task():register_target(self)

	-- Собираем статистику по предметам.
	if registred_items[self:section_name()] == nil then
		registred_items[self:section_name()] = 1
	else
		registred_items[self:section_name()] = registred_items[self:section_name()] + 1
	end
end
function se_weapon:on_unregister()
	--' Отрегистрация в таскменеджере
	task_manager.get_random_task():unregister_target(self)
end


class "se_weapon_shotgun" (cse_alife_item_weapon_shotgun)
function se_weapon_shotgun:__init (section) super (section)
end
function se_weapon_shotgun:on_register()
	cse_alife_item_weapon_shotgun.on_register( self )
	-- Регистрация в таскменеджере
	task_manager.get_random_task():register_target(self)

	-- Собираем статистику по предметам.
	if registred_items[self:section_name()] == nil then
		registred_items[self:section_name()] = 1
	else
		registred_items[self:section_name()] = registred_items[self:section_name()] + 1
	end
end
function se_weapon_shotgun:on_unregister()
	--' Отрегистрация в таскменеджере
	task_manager.get_random_task():unregister_target(self)
end


class "se_weapon_magazined" (cse_alife_item_weapon_magazined)
function se_weapon_magazined:__init (section) super (section)
	self.is_nvd_on = true
end
function se_weapon_magazined:on_register()
	cse_alife_item_weapon_magazined.on_register( self )
	-- Регистрация в таскменеджере
	task_manager.get_random_task():register_target(self)

	-- Собираем статистику по предметам.
	if registred_items[self:section_name()] == nil then
		registred_items[self:section_name()] = 1
	else
		registred_items[self:section_name()] = registred_items[self:section_name()] + 1
	end
end
function se_weapon_magazined:on_unregister()
	--' Отрегистрация в таскменеджере
	task_manager.get_random_task():unregister_target(self)
end
function se_weapon_magazined:STATE_Write (packet)
	cse_alife_item_weapon_magazined.STATE_Write (self, packet)
	packet:w_bool(self.is_nvd_on)
end
function se_weapon_magazined:STATE_Read (packet, size)
	cse_alife_item_weapon_magazined.STATE_Read (self, packet, size)
	if packet:r_eof() then
	return end	
	self.is_nvd_on = packet:r_bool()
end

class "se_weapon_magazined_w_gl" (cse_alife_item_weapon_magazined_w_gl)
function se_weapon_magazined_w_gl:__init (section) super (section)
end
function se_weapon_magazined_w_gl:on_register()
	cse_alife_item_weapon_magazined_w_gl.on_register( self )
	-- Регистрация в таскменеджере
	task_manager.get_random_task():register_target(self)

	-- Собираем статистику по предметам.
	if registred_items[self:section_name()] == nil then
		registred_items[self:section_name()] = 1
	else
		registred_items[self:section_name()] = registred_items[self:section_name()] + 1
	end
end
function se_weapon_magazined_w_gl:on_unregister()
	--' Отрегистрация в таскменеджере
	task_manager.get_random_task():unregister_target(self)
end

function stats()
	printf("*** SIM ITEMS STATISTIC ***")
	for k,v in pairs(registred_items) do
		printf("item = %s, num = %s", k, v)
	end
end