--Меню налаштувань відладки. Используется скриптом ui_mm_opt_main.script

local custom_opt_controls = {}

class "opt_custom" (CUIWindow)
function opt_custom:__init() super()
end

function opt_custom:__finalize()
end

local tab = "custom"
local mm = ui_mm_opt_main

local custom_opt_params = {
	--"option name", "option control type", "option tip name", "option tip text"
	{ "floating_info", 				"check", "gameplay_settings_name_floating_info", 				"gameplay_settings_desc_floating_info" 					},
	{ "inv_item_condition", 		"check", "gameplay_settings_name_inv_item_condition", 			"gameplay_settings_desc_inv_item_condition" 			},
	{ "wpn_addon_ammo_wnd_separate","check", "gameplay_settings_name_wpn_addon_ammo_wnd_separate", 	"gameplay_settings_desc_wpn_addon_ammo_wnd_separate" 	},
	-- { "front_view_compass", 		"check", "gameplay_settings_name_front_view_compass", 			"gameplay_settings_desc_front_view_compass" 			},
	-- { "compass_on_demand", 			"check", "gameplay_settings_name_compass_on_demand", 			"gameplay_settings_desc_compass_on_demand" 				},
	{ "select_new_task", 			"check", "gameplay_settings_name_select_new_task", 				"gameplay_settings_desc_select_new_task" 				},
	{ "task_autosave", 				"check", "gameplay_settings_name_task_autosave", 				"gameplay_settings_desc_task_autosave" 					},
	{ "breath_shader_effect", 		"check", "gameplay_settings_name_breath_shader_effect", 		"gameplay_settings_desc_breath_shader_effect" 			},
	
	{ "floating_show_delay", 		"track", "gameplay_settings_name_floating_show_delay", 			"gameplay_settings_desc_floating_show_delay" 			},
	{ "quick_save_max", 			"track", "gameplay_settings_name_quick_save_max", 				"gameplay_settings_desc_quick_save_max" 				},
	{ "check_enemy_radius", 		"track", "gameplay_settings_name_check_enemy_radius", 			"gameplay_settings_desc_check_enemy_radius" 			},
	{ "active_item_info_ttl", 		"track", "gameplay_settings_name_active_item_info_ttl", 		"gameplay_settings_desc_active_item_info_ttl" 			},
	{ "gear_info_ttl", 				"track", "gameplay_settings_name_gear_info_ttl", 				"gameplay_settings_desc_gear_info_ttl" 					},
	
	{ "game_save_mode", 			"list", "gameplay_settings_name_game_save_mode", 				"gameplay_settings_desc_game_save_mode"					},
}

function opt_custom:InitControls(x, y, xml, handler)
	self:Init(x, y, 738, 416)
	self:SetAutoDelete(true)

	xml:InitFrame("frame", self)
	xml:InitFrame("frame_"..tab, self)
	self.scroll_view = xml:InitScrollView("tab_"..tab..":scroll_view", self)

	for i=1,#custom_opt_params do
		local opt, ctrl, tip_name, tip_text = unpack(custom_opt_params[i])
		
		local static
		
		if ctrl == "list" or ctrl == "track" then --окремий випадок для комбобоксів
			static = xml:InitStatic("tab_"..tab..":cap_"..opt, self) 				--статик з описом оції у меню
			custom_opt_controls[opt] = xml[mm.get_control(ctrl)](xml, "tab_"..tab..":"..ctrl.."_"..opt, self)	--сам комбобокс
			handler:Register(custom_opt_controls[opt], opt)
			
			if ctrl == "track" then
				handler:AddCallback(opt, ui_events.TRACKBAR_CHANGED, function() self:OnTrackChange(opt) end)
			end
			
			if ctrl == "list" then
				handler:AddCallback(opt, ui_events.LIST_ITEM_SELECT, function() self:OnListItemSelect(opt) end)
				local tokens = mm_custom_options.get_script_option_tokens(opt)
				if tokens then
					for k,v in pairs(tokens) do
						custom_opt_controls[opt]:AddItem(v)
					end
				end
			end
		else
			static = xml[mm.get_control(ctrl)](xml, "tab_"..tab..":"..ctrl.."_"..opt, self.scroll_view)
			custom_opt_controls[opt] = static
			handler:AddCallback(opt, ui_events.BUTTON_CLICKED, function() self:OnButtonClick(opt) end)			
		end
		
		mm.init_hint(handler, static, opt, tip_name, tip_text)
	end
end

function opt_custom:OnButtonClick(opt)
	set_script_option_value(opt, custom_opt_controls[opt]:GetCheck())
end

function opt_custom:OnTrackChange(opt)
	set_script_option_value(opt, custom_opt_controls[opt]:GetTrackValue())
end

function opt_custom:OnListItemSelect(opt)
	set_script_option_value(opt, custom_opt_controls[opt]:CurrentID())
end

function opt_custom:SetVals()
	for opt,control in pairs(custom_opt_controls) do
		local val = get_script_option_value(opt)
		for _,v in pairs(custom_opt_params) do
			if v[1] == opt then
				if v[2] == "check" then
					control:SetCheck(val)
				elseif v[2] == "track" then
					control:SetTrackValue(val)
				elseif v[2] == "list" then
					control:SetCurrentID(val)
				end
			end
		end
	end
end